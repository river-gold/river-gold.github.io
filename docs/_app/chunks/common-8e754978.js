function l(n){let t=[...n];for(let o=n.length-1;o>0;o--){let e=Math.floor(Math.random()*(o+1)),c=t[o];t[o]=t[e],t[e]=c}return t}function h(n=200){try{window.navigator.vibrate(n)}catch(t){console.log("\uC9C4\uB3D9 \uC624\uB958",t)}}function y(){return new Promise(function(n,t){try{navigator.geolocation.getCurrentPosition(n,t)}catch(o){console.log(o),t()}})}const{defineProperty:f,getPrototypeOf:g}=Object;function d(n,t,{get:o,enumerable:e,configurable:c,set:u}={}){const{constructor:r}=n;if(o===void 0)throw`@lazy can't be set as a property \`${t}\` on ${r.name} class, using a getter instead!`;if(u)throw`@lazy can't be annotated with get ${t}() existing a setter on ${r.name} class!`;function a(i,s){return s===void 0&&(s=i,i=this),f(i,t,{enumerable:e,configurable:c,value:s}),s}return{get(){return this===n||this.constructor!==r&&g(this).constructor===r?o:a(this,o.call(this))},set:a}}export{y as g,d as l,l as s,h as v};
